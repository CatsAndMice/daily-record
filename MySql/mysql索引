 1. 索引 
    1.1 什么是索引，有什么用
		索引相当于一本书的目录，通过目录可以快速找到对应的资源
		数据库有两种方式：
		   1. 全表扫描
		   2.根据索引检索(效率很高)
		
		索引可以提高检索效率，但不能随便添加索引 
	
	1.2怎么创建索引对象，怎么删除索引对象
		创建索引对象
		   create index 索引名称  on 表名(字段名);
		 
		删除索引对象
		    drop index 索引名称 on 表名;
		  
	
	
	1.3什么时候考虑给字段添加索引
		数据量大
		该字段很少的DML操作（因为字段进行修改，索引也需要维护）
		该字段经常出现在where子句中 （经常根据哪个字段查询）
		
    1.4 
	  注意：主键和具有unique约束的字段自动会添加索引
	  根据主键查询效率很高。尽量根据主键检索 
	 
	 
	1.5 查看sql语句的执行计划
	explain select ename,sal from emp where sal  =  5000;
	 mysql> explain select ename,sal from emp where sal  =  5000;
	+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
	| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |
	+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
	|  1 | SIMPLE      | emp   | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   14 |    10.00 | Using where |
	+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+ 
  
	  
    create index sal_index on emp(sal);//创建索引 
    mysql> explain select ename,sal from emp where sal  =  5000;
	+----+-------------+-------+------------+------+---------------+-----------+---------+-------+------+----------+-------+
	| id | select_type | table | partitions | type | possible_keys | key       | key_len | ref   | rows | filtered | Extra |
	+----+-------------+-------+------------+------+---------------+-----------+---------+-------+------+----------+-------+
	|  1 | SIMPLE      | emp   | NULL       | ref  | sal_index     | sal_index | 9       | const |    1 |   100.00 | NULL  |
	+----+-------------+-------+------------+------+---------------+-----------+---------+-------+------+----------+-------+
	  
	 
	 
	 4.6索引底层采用的数据结构是:B+Tree
	  
	  
	  4.7索引的实现原理
	    通过B tree缩小扫描范围，底层索引进行排序，分区，索引会携带数据在表中的“物理地址”，最终通过
		索引检索到数据之后，获取到关联的物理地址，通过物理地址定位表中的数据 ，效率最高
			
		select ename from emp where ename = 'SMITH';
		通过索引转换为:
		select ename from emp where 物理地址 = 0x3;
	  
	  
	  4.8 索引分类
	    单一索引：给单个字段添加索引 
		复合..:给多个字段联合添加索引 
		主键..: 主键上自动添加索引
		唯一..:有unique约束的字段上会自动添加索引 
	  
	  4.9索引什么时候失效
	  select ename from emp where ename like('%A%');
	  模糊查询的时候，第一个通符使用的是%,这个时候索引是失效的
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  
	  